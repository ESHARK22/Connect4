name: Build and (maybe) Release Connect 4

on:
  push:
  pull_request:
  workflow_dispatch:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build:
    name: ${{ matrix.platform.os_name }} with rust ${{ matrix.toolchain }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - stable

        platform:
          - os_name: Linux(musl)-aarch64
            os: ubuntu-22.04
            target: aarch64-unknown-linux-musl
            bin: linux-aarch64-musl
            linker: aarch64-linux-gnu-gcc

          - os_name: Linux(musl)-x86_64
            os: ubuntu-22.04
            target: x86_64-unknown-linux-musl
            bin: linux-x86-musl
            linker: x86_64-linux-gnu-gcc

          - os_name: Linux(gnu)-aarch64
            os: ubuntu-22.04
            target: aarch64-unknown-linux-gnu
            bin: linux-aarch64-gnu
            linker: aarch64-linux-gnu-gcc

          - os_name: Linux(gnu)-x86_64
            os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            bin: linux-x86-gnu
            linker: x86_64-linux-gnu-gcc

    steps:
      - name: Checkout the connect 4 game
        uses: actions/checkout@v4

      - name: Install llvm 18
        run: |
          wget https://apt.llvm.org/llvm.sh \
          && chmod +x llvm.sh               \
          && sudo ./llvm.sh 18              \

      - name: Install build dependencies
        run: sudo apt install -y mold librust-wayland-client-dev gcc-aarch64-linux-gnu

      - name: Install rustup target
        run: rustup target add ${{ matrix.platform.target }}

      - name: Setup rust cache
        uses: Swatinem/rust-cache@v2

      - name: Build binary
        run: PKG_CONFIG_SYSROOT_DIR=/ cargo build --release --target ${{ matrix.platform.target }} --config target.${{ matrix.platform.target }}.linker=\"${{ matrix.platform.linker }}\"

      - name: Rename binary (linux)
        if: ${{ startsWith(matrix.platform.os_name, 'Linux') }}
        run: mv target/${{ matrix.platform.target }}/release/connect4 target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}

      - name: Rename binary (windows)
        if: ${{ startsWith(matrix.platform.os_name, 'Windows') }}
        run: mv target/${{ matrix.platform.target }}/release/connect4.exe target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.bin }}
          path: target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}

      - name: Release to GitHub
        uses: softprops/action-gh-release@v2
        if: github.event.release
        with:
          file: target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
