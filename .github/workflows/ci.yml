name: Build and (maybe) Release Connect 4

on:
  push:
  pull_request:
  workflow_dispatch:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build:
    name: ${{ matrix.platform.os_name }} with rust ${{ matrix.toolchain }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - stable

        platform:
          - os_name: Linux(musl)-aarch64
            os: ubuntu-22.04
            target: aarch64-unknown-linux-musl
            bin: linux-aarch64-musl

          - os_name: Linux(musl)-x86_64
            os: ubuntu-22.04
            target: x86_64-unknown-linux-musl
            bin: linux-x86-musl

          - os_name: Linux(gnu)-aarch64
            os: ubuntu-22.04
            target: aarch64-unknown-linux-gnu
            bin: linux-aarch64-gnu

          - os_name: Linux(gnu)-x86_64
            os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            bin: linux-x86-gnu

          - os_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: windows-x86.exe

          - os_name: Windows-aarch64
            os: windows-latest
            target: aarch64-pc-windows-msvc
            bin: windows-aarch64.exe

    steps:
      - name: Install llvm clang (Linux)
        if: ${{ startsWith(matrix.platform.os_name, 'Linux') }}
        run: sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"

      - name: Symlink clang binaries (Linux)
        if: ${{ startsWith(matrix.platform.os_name, 'Linux') }}
        run: for file in /bin/*-18; do ln -s "$file" "${file%-18}"; done

      - name: Install mold linker (Linux)
        uses: rui314/setup-mold@v1
        with:
          make-default: true

      - name: Install build dependencies
        if: ${{ startsWith(matrix.platform.os_name, 'Linux') }}
        run: sudo apt install libwayland-dev libasound2-dev

      - name: Checkout the connect 4 game
        uses: actions/checkout@v4

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: ${{ matrix.platform.target }}
          toolchain: ${{ matrix.toolchain }}
          args: "--release"
          strip: true

      - name: Rename binary (linux)
        if: ${{ startsWith(matrix.platform.os_name, 'Linux') }}
        run: mv target/${{ matrix.platform.target }}/release/connect4 target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}

      - name: Rename binary (windows)
        if: ${{ startsWith(matrix.platform.os_name, 'Windows') }}
        run: mv target/${{ matrix.platform.target }}/release/connect4.exe target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.bin }}
          path: target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}

      - name: Release to GitHub
        uses: softprops/action-gh-release@v2
        if: github.event.release
        with:
          file: target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
