name: Build and (maybe) Release Connect 4

on:
  push:
  pull_request:
  workflow_dispatch:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build:
    name: ${{ matrix.platform.os_name }} with rust ${{ matrix.toolchain }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - stable

        platform:
          - os_name: Linux(musl)-aarch64
            os: ubuntu-24.04
            target: aarch64-unknown-linux-musl
            bin: linux-aarch64-musl

          - os_name: Linux(musl)-x86_64
            os: ubuntu-24.04
            target: x86_64-unknown-linux-musl
            bin: linux-x86-musl

          - os_name: Linux(gnu)-aarch64
            os: ubuntu-24.04
            target: aarch64-unknown-linux-gnu
            bin: linux-aarch64-gnu

          - os_name: Linux(gnu)-x86_64
            os: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
            bin: linux-x86-gnu

          - os_name: Windows-aarch64
            os: ubuntu-24.04
            target: aarch64-pc-windows-gnullvm
            bin: windows-aarch64.exe

          - os_name: Windows-x86_64
            os: ubuntu-24.04
            target: x86_64-pc-windows-gnullvm
            bin: windows-x86_64.exe

    steps:
      - name: Checkout the connect 4 game
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: sudo apt install -y build-essential lsb-release wget software-properties-common gnupg mold gcc-aarch64-linux-gnu librust-wayland-client-dev librust-libudev-sys-dev librust-alsa-sys-dev

      - name: Install llvm 18
        run: |
          wget https://apt.llvm.org/llvm.sh \
          && chmod +x llvm.sh               \
          && sudo ./llvm.sh 18

      - name: Symlink llvm 18
        run: for file in /usr/lib/llvm-18/bin/*; do sudo ln -sf "$file" "/bin/$(basename "$file")"; done

      - name: Donnload and install llvm-mingw (Windows)
        if: ${{ startsWith(matrix.platform.os_name, 'Windows') }}
        run: |
          wget https://github.com/mstorsjo/llvm-mingw/releases/download/20240619/llvm-mingw-20240619-ucrt-ubuntu-20.04-x86_64.tar.xz && \
          tar -xvf llvm-mingw-20240619-ucrt-ubuntu-20.04-x86_64.tar.xz && \
          for file in llvm-mingw-20240619-ucrt-ubuntu-20.04-x86_64/bin/*; do sudo ln -sf "$PWD/$file" /bin/$(basename $file); done

      - name: Install rustup target
        run: rustup target add ${{ matrix.platform.target }}

      - name: Setup rust cache
        uses: Swatinem/rust-cache@v2

      - name: Build binary
        run: PKG_CONFIG_SYSROOT_DIR=/ CARGO_FEATURE_PURE=1 cargo build --release --target ${{ matrix.platform.target }}

      - name: Rename binary (linux)
        if: ${{ startsWith(matrix.platform.os_name, 'Linux') }}
        run: mv target/${{ matrix.platform.target }}/release/connect4 target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}

      - name: Rename binary (windows)
        if: ${{ startsWith(matrix.platform.os_name, 'Windows') }}
        run: mv target/${{ matrix.platform.target }}/release/connect4.exe target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.bin }}
          path: target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}

      - name: Release to GitHub
        uses: softprops/action-gh-release@v2
        if: github.event.release
        with:
          file: target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
